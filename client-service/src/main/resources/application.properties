server.port=9080
eureka.client.serviceUrl.defaultZone=http://localhost:7777/eureka/

# this is key property, mentioning that it needs to be registered as this name in the registry and other services
# can refer this name to call this service.
spring.application.name=client-service

#
eureka.instance.hostname=localhost

# /instance:port/check api is called to check the health while selecting the instance
spring.cloud.loadbalancer.health-check.path.default = check

# To maintain a unique instance-id in the instance list for a specific service
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

logging.level.root = DEBUG

# Time until the cache eviction happens for the load balancer instance selection : default value is 35s
spring.cloud.loadbalancer.cache.ttl = 100ms

## Request a lease with a validity of 5 seconds. If until then the
## lease has not been renewed, it expires and the Eureka server can evict it.
## Default: 90s
#eureka.instance.lease-expiration-duration-in-seconds = 90
#
## The cadence of lease renewal, i.e. how often a heartbeat is sent to Eureka server.
## In this case every 2 seconds. Use this only for development / debugging. In production use the ...
## Default: 30s
#eureka.instance.lease-renewal-interval-in-seconds = 30

